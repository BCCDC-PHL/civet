#!/usr/bin/env python

import csv
from Bio import SeqIO
import os

##### Configuration #####

if config.get("force"):
    config["force"] = "--forceall "

if config.get("sequencing_centre"):
    header = config["sequencing_centre"]
    filename = os.path.basename(header)
    moved_file = os.path.join(config["outdir"],"figures",filename)
    config["sequencing_centre_file"] = moved_file
    config["sequencing_centre_flag"] = f"-sc {filename}"
else:
    config["sequencing_centre"] = ""
    config["sequencing_centre_flag"] = ""
    config["sequencing_centre_file"] = ""

if config["global"] == "True":
    config["seq_db"] = config["cog_global_seqs"]
else:
    config["seq_db"] = config["cog_seqs"]

if config["quiet_mode"]=="True":
    config["quiet_mode"] = "--quiet"
else:
    config["quiet_mode"] = ""

config["distance"]=int(config["distance"])

if config["qc_fail"] != "":
    fail_file = config["qc_fail"]
    config["qc_fail"] = f"--failed-seqs {fail_file}"

if config["delay_collapse"] == "False":
    config["delay_collapse"] = False
elif config["delay_collapse"] == "True":
    config["delay_collapse"] = True

##### Target rules #####
if config.get("launch_browser"):
    rule all:
        input:
            os.path.join(config["outdir"],"combined_metadata.csv"),
            os.path.join(config["outdir"], "civet_report.md"),
            os.path.join(config["outdir"],"local_trees","collapse_report.txt"),
            os.path.join(config["outdir"],"grip_output.txt")
else:
    rule all:
        input:
            os.path.join(config["outdir"],"combined_metadata.csv"),
            os.path.join(config["outdir"], "civet_report.md"),
            os.path.join(config["outdir"],"local_trees","collapse_report.txt")


##### Modules #####
include: "assess_input_file.smk"
